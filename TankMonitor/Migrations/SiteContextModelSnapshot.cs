// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TankMonitor.SiteDb;

namespace TankMonitor.Migrations
{
    [DbContext(typeof(SiteContext))]
    partial class SiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TankMonitor.SiteDb.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date");

                    b.Property<string>("Product");

                    b.Property<int>("SiteId");

                    b.Property<string>("SiteNumber");

                    b.Property<int>("TankNumber");

                    b.Property<int>("TankVolume");

                    b.HasKey("InventoryId");

                    b.HasIndex("SiteId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("TankMonitor.SiteDb.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IpAddress");

                    b.Property<string>("PortNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SiteName");

                    b.Property<string>("SiteNumber");

                    b.HasKey("SiteId");

                    b.HasIndex("SiteNumber")
                        .IsUnique()
                        .HasFilter("[SiteNumber] IS NOT NULL");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("TankMonitor.SiteDb.Tank", b =>
                {
                    b.Property<int>("TankId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SiteId");

                    b.Property<int>("TankNumber");

                    b.Property<string>("TankProduct");

                    b.Property<int>("TankSize");

                    b.HasKey("TankId");

                    b.HasIndex("SiteId");

                    b.ToTable("Tanks");
                });

            modelBuilder.Entity("TankMonitor.SiteDb.Inventory", b =>
                {
                    b.HasOne("TankMonitor.SiteDb.Site", "Site")
                        .WithMany("Inventories")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TankMonitor.SiteDb.Tank", b =>
                {
                    b.HasOne("TankMonitor.SiteDb.Site", "Site")
                        .WithMany("Tanks")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
